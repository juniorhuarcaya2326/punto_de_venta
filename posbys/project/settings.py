"""
Django settings for posbys project.

Generated by 'django-admin startproject' using Django 1.9.1.

For more information on this file, see
https://docs.djangoproject.com/en/1.9/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/1.9/ref/settings/
"""

import os
import posixpath

# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/1.9/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'c7d0bca0-d77c-450d-8d5d-5a91506bc792'

# Environment possible values: LOCAL, DEV, TEST, PROD
# Default to LOCAL
POSBYS_ENV = os.getenv('POSBYS_ENV', 'LOCAL')

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = POSBYS_ENV != 'PROD'

ALLOWED_HOSTS = ['*']

# Application definition

INSTALLED_APPS = [
    'posbys',
    'posbys_config',
    # Add your apps here to enable them
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'rest_framework',
    'oauth2_provider',
    'debug_toolbar',
    'corsheaders',
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'corsheaders.middleware.CorsMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.auth.middleware.SessionAuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    'debug_toolbar.middleware.DebugToolbarMiddleware',
]

CORS_ORIGIN_ALLOW_ALL = True

REST_FRAMEWORK = {
    'PAGINATE_BY': 10,
    'DEFAULT_AUTHENTICATION_CLASSES': (
        'oauth2_provider.ext.rest_framework.OAuth2Authentication',
    ),
    'DEFAULT_RENDERER_CLASSES': (
        'rest_framework.renderers.JSONRenderer',
    ),
    'UNICODE_JSON': False,
}

DEBUG_TOOLBAR_PANELS = [
    'debug_toolbar.panels.versions.VersionsPanel',
    'debug_toolbar.panels.timer.TimerPanel',
    'debug_toolbar.panels.settings.SettingsPanel',
    'debug_toolbar.panels.headers.HeadersPanel',
    'debug_toolbar.panels.request.RequestPanel',
    'debug_toolbar.panels.sql.SQLPanel',
    'debug_toolbar.panels.staticfiles.StaticFilesPanel',
    'debug_toolbar.panels.templates.TemplatesPanel',
    'debug_toolbar.panels.cache.CachePanel',
    'debug_toolbar.panels.signals.SignalsPanel',
    'debug_toolbar.panels.logging.LoggingPanel',
    'debug_toolbar.panels.redirects.RedirectsPanel',
]

OAUTH2_PROVIDER = {
    # this is the list of available scopes
    'SCOPES': {'read': 'Read scope', 'write': 'Write scope'}
}

# Cache settings
if POSBYS_ENV == 'LOCAL':
    CACHES = {
        'default': {
            'BACKEND': 'django.core.cache.backends.filebased.FileBasedCache',
            'LOCATION': os.path.join(BASE_DIR, 'django_cache.cache'),
        }
    }
else:
    CACHES = {
        'default': {
            'BACKEND': 'django.core.cache.backends.memcached.MemcachedCache',
            'LOCATION': '127.0.0.1:11211',
        }
    }

ROOT_URLCONF = 'project.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'project.wsgi.application'

# Database
# https://docs.djangoproject.com/en/1.9/ref/settings/#databases

# DATABASE
POSBYS_DATABASE_NAME = os.getenv('POSBYS_DATABASE_NAME', 'byspos')
POSBYS_DATABASE_HOST = os.getenv('POSBYS_DATABASE_HOST', '131.0.0.245')
POSBYS_DATABASE_PORT = os.getenv('POSBYS_DATABASE_PORT', '5432')
POSBYS_DATABASE_USER = os.getenv('POSBYS_DATABASE_USER', 'postgres')
POSBYS_DATABASE_PASSWORD = os.getenv('POSBYS_DATABASE_PASSWORD', 'byspos')

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.postgresql_psycopg2',
        'NAME': POSBYS_DATABASE_NAME,
        'USER': POSBYS_DATABASE_USER,
        'PASSWORD': POSBYS_DATABASE_PASSWORD,
        'HOST': POSBYS_DATABASE_HOST,
        'PORT': POSBYS_DATABASE_PORT,
        'CHARSET': 'UTF8',
    },
}

# SOLR
BYS_POS_SOLR_URL = os.getenv("BYS_POS_SOLR_URL", "http://131.0.0.245:8983/solr/")
BYS_POS_SOLR_MAX_DOC_CHILD = os.getenv("BYS_POS_SOLR_MAX_DOC_CHILD", 300)
BYS_POS_SOLR_MAX_DOC_PARENT = os.getenv("BYS_POS_SOLR_MAX_DOC_PARENT", 20)

# Password validation
# https://docs.djangoproject.com/en/1.9/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]

# Internationalization
# https://docs.djangoproject.com/en/1.9/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'America/Lima'

PYTZ_TIME_ZONE = 'America/Lima'

USE_I18N = True

USE_L10N = True

USE_TZ = False

DECIMAL_SEPARATOR = '.'

THOUSAND_SEPARATOR = ','

USE_THOUSAND_SEPARATOR = False

# Redis settings
POSBYS_REDIS_HOST = os.getenv('POSBYS_REDIS_HOST', 'localhost')
POSBYS_REDIS_PORT = os.getenv('POSBYS_REDIS_PORT', '6379')
POSBYS_REDIS_PASSWORD = os.getenv('POSBYS_REDIS_PASSWORD', '')
POSBYS_REDIS_DB = os.getenv('POSBYS_REDIS_DB', '0')

# Celery settings
BROKER_URL = 'redis://%s%s:%s/%s' % (
    POSBYS_REDIS_PASSWORD, POSBYS_REDIS_HOST, POSBYS_REDIS_PORT, POSBYS_REDIS_DB)  # our redis address
# use json format for everything
CELERY_ACCEPT_CONTENT = ['json']
CELERY_TASK_SERIALIZER = 'json'
CELERY_RESULT_SERIALIZER = 'json'


MEMORY_USED = True

LOGGING_URL = os.getenv('POSBYS_LOG_PATH', os.path.realpath(os.path.join(BASE_DIR, 'log')))

LOGGING = {
    'version': 1,
    'disable_existing_loggers': False,
    'formatters': {
        'verbose': {
            'format': u'%(levelname)s %(asctime)s %(filename)s:%(lineno)d %(process)d %(thread)d %(message)s'
        },
        'simple': {
            'format': u'%(levelname)s %(asctime)s %(message)s'
        },
    },
    'handlers': {
        'file_sql': {
            'level': 'DEBUG',
            'class': 'logging.handlers.RotatingFileHandler',
            'filename': os.path.realpath(os.path.join(LOGGING_URL, 'sql.log')),
            'maxBytes': 20,
            'backupCount': 5,
            'formatter': 'verbose'
        },
        'file_debug': {
            'level': 'DEBUG',
            'class': 'logging.handlers.RotatingFileHandler',
            'filename': os.path.realpath(os.path.join(LOGGING_URL, 'debug.log')),
            'maxBytes': 20,
            'backupCount': 5,
            'formatter': 'verbose'
        },
        'file_error': {
            'level': 'ERROR',
            'class': 'logging.handlers.RotatingFileHandler',
            'filename': os.path.realpath(os.path.join(LOGGING_URL, 'error.log')),
            'maxBytes': 20,
            'backupCount': 5,
            'formatter': 'verbose'
        },
        'mail_admins': {
            'level': 'ERROR',
            'class': 'django.utils.log.AdminEmailHandler'
        },
        'console': {
            'level': 'DEBUG',
            'class': 'logging.StreamHandler',
            'formatter': 'simple',
        }
    },
    'loggers': {
        'django.request': {
            'handlers': ['file_debug', 'file_error', 'mail_admins', 'console'],
            'level': 'ERROR',
            'propagate': True,
        },
        'django.db': {
            'handlers': ['file_sql'],
            'level': 'DEBUG'
        },
        'posbys': {
            'handlers': ['file_debug', 'file_error', 'console'],
            'level': 'DEBUG',
            'propagate': False,
        },
    }
}

SEND_EMAIL_ENABLED = True

APPEND_SLASH = True

# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/1.9/howto/static-files/

STATIC_URL = '/static/'

STATIC_ROOT = posixpath.join(*(BASE_DIR.split(os.path.sep) + ['static']))

INTERNAL_IPS = ['127.0.0.1']
